name: CI Test

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres:alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test-db
          POSTGRES_PORT: 5432
        ports: ["5432:5432"]
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5



      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root
          MONGO_INITDB_USER: mongodb
          MONGO_INITDB_PASSWORD: mongodb
          MONGO_INITDB_DATABASE: test
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --entrypoint 'mongo <<EOF use $MONGO_INITDB_DATABASE \
                        db.createUser({ \
                          user: '$MONGO_INITDB_USER', \
                          pwd: '$MONGO_INITDB_PWD', \
                          roles: [{ \
                            role: 'readWrite', \
                            db: '$MONGO_INITDB_DATABASE' \
                          }] \
                        }) \
                        EOF'
        ports:
          - 27017:27017

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install Packages
        run: npm i

      - name: Npm run test
        run: npm run test
        env:
          NODE_ENV: test
          POSTGRES_URL: 'postgres://postgres:postgres@0.0.0.0:5432/test-db'
          MONGO_URL: 'mongodb://mongodb:mongodb@0.0.0.0:27017/test'

